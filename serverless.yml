service: pervichka-aws

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    TEMP_FILES_TABLE: "temp-urls-${self:service}-${opt:stage, self:provider.stage}"
    TEMP_FILES_BUCKET: "temp-files-${self:service}-${opt:stage, self:provider.stage}"
    UPLOADED_FILES_TABLE: "uploaded-urls-${self:service}-${opt:stage, self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"
    - Effect: "Allow"
      Action:
        - s3:*
      Resource: "arn:aws:s3:::${self:provider.environment.TEMP_FILES_BUCKET}/*"
  stage: dev
  region: us-east-2



functions:
  hello:
    handler: handler.hello
    events: 
      - http: get hello
  prepare-new-file-url:
    handler: prepare-new-file-url.main
    events: 
      - http:  
          path: prepare-new-file-url
          method: get
          cors: true

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  Resources:
    TempUserFilesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.TEMP_FILES_BUCKET}
        CorsConfiguration:
          CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, HEAD, POST, DELETE]
            AllowedOrigins: ['*']   
      DeletionPolicy: Retain


    TempFilesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.TEMP_FILES_TABLE}
    
    UploadedFilesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.UPLOADED_FILES_TABLE}